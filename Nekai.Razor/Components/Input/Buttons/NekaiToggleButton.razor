@namespace Nekai.Razor
@inherits NekaiComponentBase

<button id="@Id" onclick="@(async () => await ToggleActive())" class="@Class" value="@Value" type="@Type.ToString()" style="@Style" disabled="@Disabled" aria-label="@AriaLabel"
        data-bs-toggle="button" aria-pressed="@Active">
    @ChildContent
</button>


@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Parameter]
    public ButtonTheme Color { get; set; }
    [Parameter]
    public Rounding Rounding { get; set; }
    [Parameter]
    public Outline Outline { get; set; }
    [Parameter]
    public Sizing Size { get; set; }
    [Parameter]
    public bool Disabled { get; set; }
    [Parameter]
    public ButtonType Type { get; set; }
    [Parameter]
    public string Value { get; set; } = ""; 
    [Parameter]
    public EventCallback<bool> OnClick { get; set; }
    [Parameter]
    public bool Active { get; set; }

    public override void AfterClassSet()
    {
        base.AfterClassSet();
        Class += " btn ";
        Class += Color.AsClass();
        Class += ' ' + Rounding.AsClass();
        Class += ' ' + Size.AsButtonClass();
        Class += ' ' + Outline.AsButtonClass();
        if(Active)
            Class += " active";
    }

    protected async Task ToggleActive()
    {
        Active = !Active;
        await OnClick.InvokeAsync(Active);
    }
}