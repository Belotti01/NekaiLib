@namespace Nekai.Razor

@using System.Diagnostics
@using System.Reflection

<link href="_content/Nekai.Razor/Style/Nekai.variables.scss" rel="stylesheet" />
<link href="_content/Nekai.Razor/Style/Nekai.classes.scss" rel="stylesheet" />
<link href="_content/Microsoft.FluentUI.AspNetCore.Components/css/reboot.css" rel="stylesheet" />
<script src="_content/Microsoft.FluentUI.AspNetCore.Components/Microsoft.FluentUI.AspNetCore.Components.lib.module.js" type="module" async></script>
<script src="_content/Microsoft.FluentUI.AspNetCore.Components/js/loading-theme.js" type="text/javascript"></script>
<loading-theme storage-name="theme"></loading-theme>

@if(_projectName is not null)
{
	<link href="@(_projectName).styles.css" rel="stylesheet" />

	<!-- Workaround for MAUI -->
	<script app-name="@(_projectName)" src="./_content/Microsoft.FluentUI.AspNetCore.Components/js/initializersLoader.webview.js"></script>
	<script src="_framework/blazor.webview.js"></script>
}

@code {
	private string? _projectName;

	protected override void OnInitialized()
	{
		base.OnInitialized();
		_projectName = GetProjectName();
	}

	private static string GetProjectName()
	{
		var assemblyNameInfo = Assembly.GetExecutingAssembly().GetName();
		
		return assemblyNameInfo.Name ?? assemblyNameInfo.FullName;
	}
}
