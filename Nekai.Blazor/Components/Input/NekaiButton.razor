@namespace Nekai.Blazor.Components

@inherits NekaiDynamicComponentBase
@implements IButtonComponent

<FluentButton Class=@Class
			  Style=@Style
			  onclick="@OnClick"
			  Disabled="@IsDisabled"
			  Action=@Type.ToHtmlValue()
			  Appearance="@_appearance">
	@ChildContent
</FluentButton>

<button class=@Class 
		style=@Style 
		type="@Type.ToHtmlValue()"
		onclick="@OnClick" 
		disabled="@IsDisabled"
		formtarget="@Target.ToHtmlValue()"
>
	@ChildContent
</button>

@code {
	[Parameter]
	public RenderFragment? ChildContent { get; set; }
	[Parameter]
	public bool IsDisabled { get; set; }
	[Parameter]
	public TargetType Target { get; set; }
	[Parameter]
	public ButtonActionType Type { get; set; }
	[Parameter]
	public ColorType ButtonColor { get; set; }

	[Parameter]
	public EventCallback OnClick { get; set; }

	private Appearance _appearance = Appearance.Neutral;

	protected override void OnStyling(ClassBuilder classBuilder)
	{
		base.OnStyling(classBuilder);
		classBuilder.WithButton(ButtonColor);
	}
}
